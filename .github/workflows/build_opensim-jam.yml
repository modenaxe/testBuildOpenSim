name: openism-core

on: 
    push:
    schedule:
      - cron: '0 0 * * *'

jobs:

    build:

        name: Windows
        runs-on: windows-2022
        defaults:
            run:
                shell: powershell

        strategy:
            matrix:
                # os: [windows-2022]
                include:

                  # - label: 'py312-np1'
                  #   python_version: '3.12'
                  #   numpy_version: '1.*'

                  - label: 'py313-np2'
                    python_version: '3.13'
                    numpy_version: '2.*'

        steps:







          # - name: Clone the workflow
          #   uses: actions/checkout@v4


          # - name: Clone opensim-core repository
          #   uses: actions/checkout@v4
          #   with:
          #       # repository: opensim-org/opensim-core
          #       # path: 'opensim-core'
          #       repository: mrrezaie/opensim-jam-core
          #       path: 'opensim-core'
          #       ref: 'main'

          # - name: Rename the JAM-core
          #   run: robocopy $env:GITHUB_WORKSPACE/opensim-core ~/opensim-core


          - name: Clone opensim-core repository
            run: |
                git clone https://github.com/mrrezaie/opensim-jam-core.git 
                run: robocopy $env:GITHUB_WORKSPACE/opensim-core ~/opensim-core



          - name: Paths
            run: |
                dir ~
                dir $env:GITHUB_WORKSPACE
                dir ~/opensim-core








          # - name: Clone opensim-jam repository
          #   uses: actions/checkout@v4
          #   with:
          #       repository: opensim-jam-org/opensim-core
          #       path: 'opensim-jam-core'
          #       token: ${{ secrets.GITHUB_TOKEN }}
          #       # repository: mrrezaie/opensim-jam-core
          #       # path: 'opensim-core'

          # - name: Merged the latest commits of the opensim-core
          #   run: |
          #       cd $env:GITHUB_WORKSPACE/opensim-jam-core
          #       git config --global user.email "mrrezaie@outlook.com"
          #       git config --global user.name "mrrezaie"
          #       git init
          #       git remote add opensim_core_latest https://github.com/opensim-org/opensim-core.git
          #       git remote -v
          #       git fetch opensim_core_latest
          #       git checkout main
          #       git merge opensim_core_latest/main --allow-unrelated-histories
          #       # git push opensim_core_latest main





          - name: Install SWIG
            run: |
                choco install swig --version 4.1.1 --yes --limit-output --allow-downgrade
                swig -swiglib
                

          # - name: List packages
          #   run: choco list



          - name: Install Python ${{ matrix.python_version }}
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python_version }}


          - name: Install NumPy 
            run: |
                python -m pip install --upgrade pip
                python -m pip install numpy==${{ matrix.numpy_version }} setuptools wheel









          - name: Cache opensim-core dependencies
            id: cache-dependencies
            uses: actions/cache@v4
            with:
                path: ~/opensim_dependencies_install
                key: ${{ runner.os }}-dependencies-${{ hashFiles('opensim-core/dependencies/*') }}


          - name: Build opensim-core dependencies
            # if: steps.cache-dependencies.outputs.cache-hit != 'true'
            run: |
                mkdir $env:GITHUB_WORKSPACE\\build_deps
                chdir $env:GITHUB_WORKSPACE\\build_deps
                
                $env:CXXFLAGS = "/W0"
                cmake $env:GITHUB_WORKSPACE/opensim-core/dependencies `
                    -G "Visual Studio 17 2022" -A x64 `
                    -DSUPERBUILD_ezc3d=ON `
                    -DOPENSIM_WITH_CASADI=ON `
                    -DOPENSIM_WITH_TROPTER=OFF `
                    -DCMAKE_INSTALL_PREFIX=~/opensim_dependencies_install
                    
                cmake --build . --config Release -j4














          - name: Obtain opensim-core commit
            id: opensim-core-commit
            run: |
                cd opensim-core
                $opensim_core_commit=(git rev-parse HEAD)
                echo "hash=$opensim_core_commit" >> $GITHUB_OUTPUT
                echo $opensim_core_commit


          - name: Cache opensim-core
            id: cache-core
            uses: actions/cache@v4
            with:
                path: ~/opensim-core-install
                key: ${{ runner.os }}-${{ steps.opensim-core-commit.outputs.hash }}



          - name: Build opensim-core
            # if: steps.cache-core.outputs.cache-hit != 'true'
            id: build
            run: |
                mkdir $env:GITHUB_WORKSPACE\\build_core
                chdir $env:GITHUB_WORKSPACE\\build_core
                
                $env:CXXFLAGS = "/W0"
                cmake $env:GITHUB_WORKSPACE/opensim-core `
                    -G "Visual Studio 17 2022" -A x64 `
                    -DOPENSIM_DEPENDENCIES_DIR=~/opensim_dependencies_install `
                    -DOPENSIM_C3D_PARSER=ezc3d `
                    -DBUILD_PYTHON_WRAPPING=ON `
                    -DOPENSIM_WITH_CASADI=ON `
                    -DBUILD_JAVA_WRAPPING=ON `
                    -DOPENSIM_WITH_TROPTER=OFF `
                    -DBUILD_TESTING=OFF `
                    -DCMAKE_INSTALL_PREFIX=~/opensim-core-install
                    
                cmake -L -N .
                cmake --build . --config Release --target install -j4
                cmake --install .


                # $env:match = cmake -L . | Select-String -Pattern OPENSIM_QUALIFIED_VERSION
                # $OPENSIM_VERSION = $env:match.split('=')[1]
                # echo "OPENSIM_VERSION=$OPENSIM_VERSION" >> $env:GITHUB_ENV
                

          # - name: Version
          #   run: echo ${{ env.OPENSIM_VERSION }}






          # - name: Clone opensim-models Geometry
          #   uses: actions/checkout@v4
          #   with:
          #       repository: opensim-org/opensim-models
          #       path: 'opensim-models'
          #       sparse-checkout: 'Geometry'
          #       # sparse-checkout-cone-mode: false


          # - name: Include Geometry folder
          #   run: |
          #       dir .
          #       move $env:GITHUB_WORKSPACE/opensim-models/Geometry ~/opensim-core-install





          # - name: Build wheel file
          #   run: |
          #       chdir ~/opensim-core-install/sdk/Python
          #       python setup.py bdist_wheel
          #       # pip install ~/opensim-core-install/sdk/Python/dist/*.whl





          # - name: Check files
          #   run: |
          #       dir ~/opensim_dependencies_install
          #       dir ~/opensim-core-install
          #       dir ~/opensim-core-install/sdk/Python
          #       dir ~/opensim-core-install/sdk/Python/opensim







          - name: Clone opensim-gui repository
            uses: actions/checkout@v4
            with:
                repository: opensim-org/opensim-gui
                path: 'opensim-gui'




          - name: Set up JDK 1.8
            uses: actions/setup-java@v4
            with:
                distribution: 'temurin'
                java-version: 8







          - name: Cache Netbeans 12.3
            id: cache-netbeans
            uses: actions/cache@v4
            with:
                path: C:\\Program Files\\NetBeans-12.0
                key: ${{ runner.os }}-dependencies-${{ '0695d87d9c72dcf3738672ba83eb273dda02066fa5eee80896cb6ccf79175840367a13d22ab3cb9838dffaa9a219dd1f73aee0e27c085e5310da2e3bbbc92b2c' }}


          - name: Install Netbeans 12.3
            if: steps.cache-netbeans.outputs.cache-hit != 'true'
            run: |
                (New-Object System.Net.WebClient).DownloadFile("https://archive.apache.org/dist/netbeans/netbeans/12.3/Apache-NetBeans-12.3-bin-windows-x64.exe", "Apache-NetBeans-12.3-bin-windows-x64.exe")
                $expectedHash = "0695d87d9c72dcf3738672ba83eb273dda02066fa5eee80896cb6ccf79175840367a13d22ab3cb9838dffaa9a219dd1f73aee0e27c085e5310da2e3bbbc92b2c"
                $hashFromFile = Get-FileHash -Algorithm SHA512 -Path .\Apache-NetBeans-12.3-bin-windows-x64.exe
                if (($hashFromFile.Hash) -ne ($expectedHash)) { Write-Error "Hash doesn't match." }
                .\Apache-NetBeans-12.3-bin-windows-x64.exe --silent | Out-Null # This installer is gregarious.
                echo "ANT_HOME=C:\\Program Files\\NetBeans-12.0\\netbeans\\extide\\ant" >> $GITHUB_ENV







          - name: Update submodules
            run: |
                cd $env:GITHUB_WORKSPACE/opensim-gui
                git submodule update --init --recursive -- opensim-models opensim-visualizer Gui/opensim/threejs


          - name: Build GUI
            id: build-gui
            run: |
                mkdir $env:GITHUB_WORKSPACE\\build_gui
                chdir $env:GITHUB_WORKSPACE\\build_gui

                cmake $env:GITHUB_WORKSPACE/opensim-gui/ `
                -G"Visual Studio 17 2022" -A x64 `
                -DCMAKE_PREFIX_PATH=~/opensim-core-install `
                -DANT_ARGS="-Dnbplatform.default.netbeans.dest.dir=C:/Program Files/NetBeans-12.3/netbeans;-Dnbplatform.default.harness.dir=C:/Program Files/NetBeans-12.3/netbeans/harness"
                cmake --build . --target CopyOpenSimCore --config Release
                cmake --build . --target CopyModels --config Release
                cmake --build . --target PrepareInstaller --config Release
                cmake --build . --target CopyJRE --config Release
                cmake --build . --target CopyVisualizer --config Release







          - name: Build GUI installer
            run: |
                cd $env:GITHUB_WORKSPACE/opensim-gui/Gui/opensim/dist/installer
                makensis.exe make_installer.nsi
                # mv OpenSim-${{ steps.build-gui.outputs.version }}-win64.exe $env:GITHUB_WORKSPACE


          - name: Paths
            run: |
                dir ~/
                dir $env:GITHUB_WORKSPACE
                dir $env:GITHUB_WORKSPACE/opensim-gui
                dir $env:GITHUB_WORKSPACE/opensim-gui/Gui/opensim/dist/installer




          - name: Upload GUI installer
            uses: actions/upload-artifact@v4
            with:
                name: OpenSim-GUI-win64-${{ matrix.label }}
                path: D:/a/testBuildOpenSim/testBuildOpenSim/opensim-gui/Gui/opensim/dist/installer/opensim
                # path: D:/a/testBuildOpenSim/testBuildOpenSim/opensim-gui/Gui/opensim/dist/installer/*.exe


          # - name: Upload opensim-core
          #   uses: actions/upload-artifact@v4
          #   with:
          #       name: opensim-core-win64-${{ matrix.label }}
          #       path: ~/opensim-core-install/sdk/Python/dist/*.whl
          #       # path: ~/opensim-core-install
          #       compression-level: 0
